{% extends 'layout/base.twig' %}
{% import 'macros/helpers.twig' as helpers %}

{% block title %}
- Profile - {{ result.meta.url }}
{% endblock %}

{% block content %}
<div class="row-fluid">
    <h1>Profile data for {{ result.meta('SERVER.REQUEST_METHOD')}} {{ result.meta.url }}</h1>
</div>
<div class="row-fluid">
<div class="span3">
    <div class="sidebar-nav">
        <ul class="nav nav-list">
            <li class="nav-header"><h3>This Run</h3></li>
            <li><strong>URL</strong> <a style="    word-wrap: break-word; word-break: normal;" href="{{ url('url.view', {'url': result.meta('url')|simple_url }) }}">{{ result.meta('url') }}</a></li>
            <li><strong>Time</strong> {{ result.date|date(date_format) }}</li>
            <li><strong>ID</strong> <a href="{{ url('custom.help', {id: result.id|trim }) }}">{{ result.id }}</a></li>
            <li><strong>Wall Time</strong> {{ result.get('main()', 'wt')|as_time }}</li>
            <li><strong>CPU Time</strong> {{ result.get('main()', 'cpu')|as_time }}</li>
            <li><strong>Memory Usage</strong> {{ result.get('main()', 'mu')|as_bytes }}</li>
            <li><strong>Peak Memory Usage</strong> {{ result.get('main()', 'pmu')|as_bytes }}</li>

            <li class="nav-header"><h3>GET</h3></li>
            <li>{{ helpers.property_list('GET', result.meta('get')) }}</li>

            <li class="nav-header"><h3>SERVER</h3></li>
            <dt style="color: red;">SERVER_NAME</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').SERVER_NAME }}</dd>
            <dt style="color: red;">DOCUMENT_ROOT</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').DOCUMENT_ROOT }}</dd>
            <dt>SERVER_ADDR</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').SERVER_ADDR }}</dd>
            <dt>SERVER_PORT</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').SERVER_PORT }}</dd>
            <dt>USER</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').USER }}</dd>
            <dt>SCRIPT_FILENAME</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').SCRIPT_FILENAME }}</dd>
            <dt>QUERY_STRING</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').QUERY_STRING }}</dd>
            <dt>REQUEST_METHOD</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').REQUEST_METHOD }}</dd>
            <dt>CONTENT_TYPE</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').CONTENT_TYPE }}</dd>
            <dt>REQUEST_URI</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').REQUEST_URI }}</dd>
            <dt>DOCUMENT_URI</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').DOCUMENT_URI }}</dd>
            <dt>SERVER_PROTOCOL</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').SERVER_PROTOCOL }}</dd>
            <dt>SERVER_SOFTWARE</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').SERVER_SOFTWARE }}</dd>
            <dt>REMOTE_ADDR</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').REMOTE_ADDR }}</dd>
            <dt>REMOTE_PORT</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').REMOTE_PORT }}</dd>
            <dt>REDIRECT_STATUS</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').REDIRECT_STATUS }}</dd>
            <dt>HTTP_HOST</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').HTTP_HOST }}</dd>
            <dt>HTTP_CONNECTION</dt>
            <dd class="text-wrap">{{ result.meta('SERVER').HTTP_CONNECTION }}</dd>

            <li class="nav-header"><h3>Waterfall</h3></li>
            <li><strong>By IP</strong> <a href="{{ url('waterfall.list', {'remote_addr': result.meta.SERVER.REMOTE_ADDR, 'request_start': result.meta.SERVER.REQUEST_TIME - 5, 'request_end': result.meta.SERVER.REQUEST_TIME + 15}) }}">{{ result.meta.SERVER.REMOTE_ADDR }}</a></li>

        </ul>
    </div>
</div>

<div class="span9">

    <div class="row-fluid">
        <a href="{{ url('run.compare', {base: result.id|trim }) }}" id="compare-button" class="btn back-link">
            Compare this run
        </a>
        <a href="{{ url('run.flamegraph', {id: result.id|trim }) }}" class="btn back-link">
            View Flamegraph
        </a>
        <a href="{{ url('run.callgraph', {id: result.id|trim }) }}" class="btn back-link">
            View Callgraph
        </a>
        <a href="#functions" class="btn back-link">
            Jump to functions
        </a>

        <h2>Watch Functions</h2>

        <table class="table table-hover">
        <thead>
            <tr>
                <th>Function</th>
                <th class="right">Call Count</th>
                <th class="right"><span class="tip" title="Self wall time">ewt</span></th>
                <th class="right"><span class="tip" title="Self memory use">emu</span></th>
                <th class="right"><span class="tip" title="Self peak memory use">epmu</span></th>
            </tr>
        </thead>
        <tbody>
        {% for value in watches %}
        <tr>
            <td>
            {{ helpers.tip_link(
                value.function,
                65,
                'run.symbol',
                {'id': result.id|trim, 'symbol': value.function}
            ) }}
            </td>
            <td class="right">{{ value.ct }}</td>
            <td class="right">{{ value.ewt|as_time }}</td>
            <td class="right">{{ value.emu|as_bytes }}</td>
            <td class="right">{{ value.epmu|as_bytes }}</td>
        </tr>
        {% else %}
        <tr><td colspan="4">
            You have no watch functions setup.
            <a href="{{ url('watch.list') }}">Add a watch function now</a>.
        </td></tr>
        {% endfor %}
        </tbody>
        </table>
    </div>

    <div class="row-fluid">
        <div class="span6">
          <h2>Self Wall Time</h2>
          <div id="wall-time-chart" class="chart-container"></div>
          <dl>
          {% for value in wall_time %}
              <dt class="text-wrap">{{ value.name }}</dt>
              <dd>{{ value.value|as_time }}</dd>
          {% endfor %}
          </dl>
        </div>

        <div class="span6">
          <h2>Memory Hogs</h2>
          <div id="memory-usage-chart" class="chart-container"></div>
          <dl>
          {% for value in memory %}
              <dt class="text-wrap">{{ value.name }}</dt>
              <dd>{{ value.value|as_bytes }}</dd>
          {% endfor %}
          </dl>
        </div>
    </div>
  </div><!--/row-->
</div>

<div class="row-fluid">
  <div class="pull-right form-search">
      <input type="search" id="function-filter" placeholder="Filter by function name" />
  </div>
</div>

<div class="row-fluid">
  <a name="functions"></a>
  <table class="table table-hover table-sort" id="function-calls">
    <thead>
        <tr>
            <th>Function</th>
            <th>Call Count</th>
            <th>Self Wall Time</th>
            <th>Self CPU</th>
            <th>Self Memory Usage</th>
            <th>Self Peak Memory Usage</th>
            <th>Inclusive Wall Time</th>
            <th>Inclusive CPU</th>
            <th>Inclusive Memory Usage</th>
            <th>Inclusive Peak Memory Usage</th>
        </tr>
    </thead>
    <tbody>
    {% for key, value in profile %}
    <tr>
        <td class="text">
            {{ helpers.tip_link(
                key,
                65,
                'run.symbol',
                {'id': result.id|trim, 'symbol': key}
            ) }}
        </td>
        <td class="right">{{ value.ct }}</td>
        <td class="right">{{ value.ewt|as_time }}</td>
        <td class="right">{{ value.ecpu|as_time }}</td>
        <td class="right">{{ value.emu|as_bytes }}</td>
        <td class="right">{{ value.epmu|as_bytes }}</td>
        <td class="right">{{ value.wt|as_time }}</td>
        <td class="right">{{ value.cpu|as_time }}</td>
        <td class="right">{{ value.mu|as_bytes }}</td>
        <td class="right">{{ value.pmu|as_bytes }}</td>
    </tr>
    {% endfor %}
    </tbody>
</table>
</div><!--/row-->
{% endblock %}

{% block jsfoot %}
<script>
$(document).ready(function () {
    var wallTime = {{ wall_time|json_encode|raw }};
    Xhgui.columnchart('#wall-time-chart', wallTime, {
        width: 350,
        height: 300,
        postfix: ' \u00b5s'
    });
    var memoryData = {{ memory|json_encode|raw }};
    Xhgui.columnchart('#memory-usage-chart', memoryData, {
        width: 350,
        height: 300,
        postfix: ' bytes'
    });

    var rows = $('#function-calls tbody tr');
    $('#function-filter').on('keyup', function(e) {
        var value = $(this).val();
        rows.each(function (i, el) {
            var row = $(el);
            var name = row.find('.text a').text();
            if (name.indexOf(value) === -1) {
                row.hide();
            } else {
                row.show();
            }
        });
    });
});
</script>
{% endblock %}
